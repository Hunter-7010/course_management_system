import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex  min-h-screen w-screen overflow-hidden bg-gray-50 bg-gradient-to-b duration-500 dark:bg-gray-900 dark:text-white">
        <div className="hidden shrink-0 grow-0 flex-col overflow-y-auto border-r dark:border-gray-700 lg:flex">
          <div className="flex h-[86.3px]  items-center justify-center border-b text-4xl font-bold dark:border-gray-700">
            Course Managment
          </div>
          <div className="flex h-[41.2rem] w-full flex-col  text-gray-400 antialiased">
            <h2 className="p-5 text-sm font-semibold tracking-widest">
              ALL BOARDS
            </h2>
            <div className="relative space-y-1 overflow-y-auto  pr-6"></div>
          </div>
        </div>
        <div className="fixed top-3.5 overflow-y-auto lg:hidden">
          {/* <SideBar boardCount={boardData?.boardsCount}>
            <div className="flex w-full flex-col justify-center">
            
            </div>

            <div className="relative space-y-1 overflow-y-auto  pr-6">
              <NewBoard />
              {boardData ? (
                boardData.boards?.map((board) => (
                  <div
                    key={board.id}
                    onClick={() => handleBoardClick(board.id)}
                  >
                    <Boards
                      title={board.title}
                      currentBoardId={boardId}
                      boardId={board.id}
                      key={board.id}
                    />
                  </div>
                ))
              ) : (
                <BoardsLoading />
              )}
            </div>
          </SideBar> */}
        </div>

        <div className="flex grow flex-col overflow-y-auto">
          <div className="flex h-[96px] items-center justify-between border-b dark:border-gray-700">
            <h1 className="w-1/2 truncate pl-14 text-2xl font-bold text-gray-900  antialiased dark:text-white md:pl-10">
              {/* {oneBoardData.title} */}
            </h1>
            <div className="flex space-x-4 pr-10">
              {/* <NewSubTask
                task={
                  oneBoardData.tasks as {
                    id: string;
                    title: string;
                    boardId: string;
                    color: string;
                    createdAt: Date;
                    updatedAt: Date;
                    subTasks: [];
                  }[]
                }
              /> */}
              <div className="flex items-center justify-center">
                {/* <BoardOptionsDropdown boardId={boardId} /> */}
              </div>
            </div>
          </div>
          <div className="flex h-full w-full flex-wrap justify-center gap-x-12 overflow-y-auto px-4 md:justify-start"></div>
        </div>
        {/*  ) : isLoadingOneBoard ? (
           <LoadingOneBoard />
         ) : (
           <NoBoardSelected />
         )} */}
      </main>
    </>
  );
};

export default Home;
